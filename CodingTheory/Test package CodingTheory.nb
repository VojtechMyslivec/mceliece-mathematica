(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     28539,        980]
NotebookOptionsPosition[     24367,        865]
NotebookOutlinePosition[     24776,        881]
CellTagsIndexPosition[     24733,        878]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 FormBox[
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], 
  TraditionalForm], "\[IndentingNewLine]", 
 FormBox[
  RowBox[{"<<", "CodingTheory`"}], TraditionalForm]}], "Input",
 CellChangeTimes->{{3.6538177390334997`*^9, 3.653817768919944*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{"H", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "1", ",", "0"}], "}"}]}], "}"}]}], 
  TraditionalForm]], "Input"],

Cell[BoxData[
 FormBox[
  RowBox[{"?", "AugmentedCode"}], TraditionalForm]], "Input"],

Cell[BoxData[
 FormBox[
  RowBox[{"AugmentedCode", "[", "H", "]"}], TraditionalForm]], "Input"],

Cell[BoxData[
 FormBox[
  RowBox[{"?", "BinaryGaloisField"}], TraditionalForm]], "Input"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"g", "=", 
    RowBox[{"1", "+", "x", "+", 
     RowBox[{"x", "^", "3"}]}]}], ";", 
   RowBox[{"BinaryGaloisField", "[", 
    RowBox[{"g", ",", "x", ",", "b", ",", "a"}], "]"}]}], 
  TraditionalForm]], "Input"],

Cell[BoxData[
 FormBox[
  RowBox[{"?", "BinaryIrreduciblePolynomials"}], TraditionalForm]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"n", "=", "5"}], ";", 
  RowBox[{"BinaryIrreduciblePolynomials", "[", 
   RowBox[{"n", ",", "x"}], "]"}]}]], "Input"],

Cell[BoxData[
 FormBox[
  RowBox[{"?", "BurstRectangularCodeVector"}], TraditionalForm]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"n", "=", "3"}], ";", 
  RowBox[{"m", "=", "4"}], ";", 
  RowBox[{"inf", "=", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1",
      ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}]}], ";", 
  RowBox[{"BurstRectangularCodeVector", "[", 
   RowBox[{"n", ",", "m", ",", "inf"}], "]"}]}]], "Input"],

Cell[BoxData[
 FormBox[
  RowBox[{"?", "CyclicCode"}], TraditionalForm]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"g", "=", 
   RowBox[{"1", "+", "x", "+", 
    RowBox[{"x", "^", "3"}]}]}], ";", 
  RowBox[{"n", "=", "7"}], ";", 
  RowBox[{"CyclicCode", "[", 
   RowBox[{"g", ",", "n", ",", "x"}], "]"}]}]], "Input"],

Cell[BoxData[
 FormBox[
  RowBox[{"?", "DecHammingCode"}], TraditionalForm]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"m", "=", "3"}], ";", 
  RowBox[{"w", "=", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "1", ",", "1"}],
     "}"}]}], ";", 
  RowBox[{"DecHammingCode", "[", 
   RowBox[{"m", ",", "w"}], "]"}]}]], "Input"],

Cell[BoxData[
 FormBox[
  RowBox[{"?", "DecRectangularCode"}], TraditionalForm]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"n", "=", "2"}], ";", 
  RowBox[{"m", "=", "3"}], ";", 
  RowBox[{"w", "=", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "1",
      ",", "0", ",", "1", ",", "1", ",", "1"}], "}"}]}], ";", 
  RowBox[{"DecRectangularCode", "[", 
   RowBox[{"n", ",", "m", ",", "w"}], "]"}]}]], "Input"],

Cell[BoxData[
 FormBox[
  RowBox[{"?", "DimensionCode"}], TraditionalForm]], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"H", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "0", ",", "1"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"DimensionCode", "[", "H", "]"}]}], "Input"],

Cell[BoxData[
 FormBox[
  RowBox[{"?", "DistanceCode"}], TraditionalForm]], "Input"],

Cell[BoxData[
 RowBox[{"DistanceCode", "[", "H", "]"}]], "Input"],

Cell[BoxData[
 FormBox[
  RowBox[{"?", "DualCode"}], TraditionalForm]], "Input"],

Cell[BoxData[
 RowBox[{"DualCode", "[", "H", "]"}]], "Input"],

Cell[BoxData[
 FormBox[
  RowBox[{"?", "EquivalentCode"}], TraditionalForm]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"q", "=", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "4", ",", "3"}], "}"}]}], ";", 
  RowBox[{"EquivalentCode", "[", 
   RowBox[{"H", ",", "q"}], "]"}]}]], "Input"],

Cell[BoxData[
 FormBox[
  RowBox[{"?", "ErrorTrappingDecodeBCHCode"}], TraditionalForm]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"w", "=", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0",
      ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
    "}"}]}], ";", 
  RowBox[{"ErrorTrappingDecodeBCHCode", "[", "w", "]"}]}]], "Input"],

Cell[BoxData[
 FormBox[
  RowBox[{"?", "ErrorTrappingDecodeHammingCode"}], TraditionalForm]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"w", "=", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "1", ",", "0"}],
     "}"}]}], ";", 
  RowBox[{"ErrorTrappingDecodeHammingCode", "[", 
   RowBox[{"w", ",", "x"}], "]"}]}]], "Input"],

Cell[BoxData[
 FormBox[
  RowBox[{"?", "ExpurgatingCode"}], TraditionalForm]], "Input"],

Cell[BoxData[{
 FormBox[
  RowBox[{"H", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "1", ",", "0"}], "}"}]}], "}"}]}], 
  TraditionalForm], "\[IndentingNewLine]", 
 FormBox[
  RowBox[{"ExpurgatingCode", "[", "H", "]"}], TraditionalForm]}], "Input"],

Cell[BoxData[
 FormBox[
  RowBox[{"?", "ExtendedCode"}], TraditionalForm]], "Input"],

Cell[BoxData[{
 FormBox["H", TraditionalForm], "\[IndentingNewLine]", 
 FormBox[
  RowBox[{"ExtendedCode", "[", "H", "]"}], TraditionalForm]}], "Input"],

Cell[BoxData[
 FormBox[
  RowBox[{"?", "GeneratorMatrix"}], TraditionalForm]], "Input"],

Cell[BoxData[{
 FormBox["H", TraditionalForm], "\[IndentingNewLine]", 
 FormBox[
  RowBox[{"GeneratorMatrix", "[", "H", "]"}], TraditionalForm]}], "Input"],

Cell[BoxData[
 FormBox[
  RowBox[{"?", "GeneratorPolynomials"}], TraditionalForm]], "Input"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"n", "=", "7"}], ";", 
   RowBox[{"GeneratorPolynomials", "[", 
    RowBox[{"n", ",", "x"}], "]"}]}], TraditionalForm]], "Input"],

Cell[BoxData[
 FormBox[
  RowBox[{"?", "GilbertVarshamovBound"}], TraditionalForm]], "Input"],

Cell[BoxData[{
 FormBox[
  RowBox[{
   RowBox[{"n", "=", "10"}], ";", 
   RowBox[{"k", "=", "2"}], ";", 
   RowBox[{"d", "=", "3"}], ";", 
   RowBox[{"GilbertVarshamovBound", "[", 
    RowBox[{"n", ",", "k", ",", "d"}], "]"}], ";"}], 
  TraditionalForm], "\[IndentingNewLine]", 
 FormBox[
  RowBox[{
   RowBox[{"n", "=", "10"}], ";", 
   RowBox[{"k", "=", "2"}], ";", 
   RowBox[{"Clear", "[", "d", "]"}], ";", 
   RowBox[{"GilbertVarshamovBound", "[", 
    RowBox[{"n", ",", "k", ",", "d"}], "]"}]}], 
  TraditionalForm], "\[IndentingNewLine]", 
 FormBox[
  RowBox[{
   RowBox[{"n", "=", "10"}], ";", 
   RowBox[{"Clear", "[", "k", "]"}], ";", 
   RowBox[{"d", "=", "3"}], ";", 
   RowBox[{"GilbertVarshamovBound", "[", 
    RowBox[{"n", ",", "k", ",", "d"}], "]"}]}], 
  TraditionalForm], "\[IndentingNewLine]", 
 FormBox[
  RowBox[{
   RowBox[{"Clear", "[", "n", "]"}], ";", 
   RowBox[{"k", "=", "2"}], ";", 
   RowBox[{"d", "=", "3"}], ";", 
   RowBox[{"GilbertVarshamovBound", "[", 
    RowBox[{"n", ",", "k", ",", "d"}], "]"}]}], 
  TraditionalForm], "\[IndentingNewLine]", 
 FormBox[
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"n", ",", "k"}], "]"}], ";", 
   RowBox[{"d", "=", "3"}], ";", 
   RowBox[{"GilbertVarshamovBound", "[", 
    RowBox[{"n", ",", "k", ",", "d"}], "]"}]}], TraditionalForm]}], "Input"],

Cell[BoxData[
 FormBox[
  RowBox[{"?", "HammingBound"}], TraditionalForm]], "Input"],

Cell[BoxData[{
 FormBox[
  RowBox[{
   RowBox[{"n", "=", "10"}], ";", 
   RowBox[{"k", "=", "2"}], ";", 
   RowBox[{"d", "=", "3"}], ";", 
   RowBox[{"HammingBound", "[", 
    RowBox[{"n", ",", "k", ",", "d"}], "]"}]}], 
  TraditionalForm], "\[IndentingNewLine]", 
 FormBox[
  RowBox[{
   RowBox[{"n", "=", "10"}], ";", 
   RowBox[{"k", "=", "2"}], ";", 
   RowBox[{"Clear", "[", "d", "]"}], ";", 
   RowBox[{"HammingBound", "[", 
    RowBox[{"n", ",", "k", ",", "d"}], "]"}]}], 
  TraditionalForm], "\[IndentingNewLine]", 
 FormBox[
  RowBox[{
   RowBox[{"n", "=", "10"}], ";", 
   RowBox[{"Clear", "[", "k", "]"}], ";", 
   RowBox[{"d", "=", "3"}], ";", 
   RowBox[{"HammingBound", "[", 
    RowBox[{"n", ",", "k", ",", "d"}], "]"}]}], 
  TraditionalForm], "\[IndentingNewLine]", 
 FormBox[
  RowBox[{
   RowBox[{"Clear", "[", "n", "]"}], ";", 
   RowBox[{"k", "=", "2"}], ";", 
   RowBox[{"d", "=", "3"}], ";", 
   RowBox[{"HammingBound", "[", 
    RowBox[{"n", ",", "k", ",", "d"}], "]"}]}], 
  TraditionalForm], "\[IndentingNewLine]", 
 FormBox[
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"n", ",", "k"}], "]"}], ";", 
   RowBox[{"d", "=", "3"}], ";", 
   RowBox[{"HammingBound", "[", 
    RowBox[{"n", ",", "k", ",", "d"}], "]"}]}], TraditionalForm]}], "Input"],

Cell[BoxData[
 FormBox[
  RowBox[{"?", "HammingCode"}], TraditionalForm]], "Input"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"m", "=", "3"}], ";", 
   RowBox[{"inf", "=", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1", ",", "1", ",", "0"}], "}"}]}], ";", 
   RowBox[{"HammingCode", "[", 
    RowBox[{"m", ",", "inf"}], "]"}], " "}], TraditionalForm]], "Input"],

Cell[BoxData[
 FormBox[
  RowBox[{"?", "HammingMatrix"}], TraditionalForm]], "Input"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"m", "=", "3"}], ";", 
   RowBox[{
    RowBox[{"DualCode", "[", 
     RowBox[{"HammingMatrix", "[", "m", "]"}], "]"}], "//", "MatrixForm"}]}], 
  TraditionalForm]], "Input",
 CellChangeTimes->{{3.6538178594231453`*^9, 3.653817886702059*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{"?", "McWilliamsIdentity"}], TraditionalForm]], "Input"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"f", "=", 
    RowBox[{"1", "+", 
     RowBox[{"x", "^", "7"}]}]}], ";", 
   RowBox[{"n", "=", "7"}], ";", 
   RowBox[{"McWilliamsIdentity", "[", 
    RowBox[{"f", ",", "n", ",", "x"}], "]"}]}], TraditionalForm]], "Input"],

Cell[BoxData[
 FormBox[
  RowBox[{"?", "MeggittDecode"}], TraditionalForm]], "Input"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"g", "=", 
    RowBox[{"1", "+", "x", "+", 
     RowBox[{"x", "^", "3"}]}]}], ";", 
   RowBox[{"n", "=", "7"}], ";", 
   RowBox[{"w", "=", 
    RowBox[{"{", 
     RowBox[{
     "1", ",", "1", ",", "0", ",", "1", ",", "0", ",", "1", ",", "0"}], 
     "}"}]}], ";", 
   RowBox[{"MeggittDecode", "[", 
    RowBox[{"g", ",", "w", ",", "n", ",", "x"}], "]"}]}], 
  TraditionalForm]], "Input"],

Cell[BoxData[
 FormBox[
  RowBox[{"?", "NonsystematicEncodeCyclicCode"}], TraditionalForm]], "Input"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"g", "=", 
    RowBox[{"1", "+", "x", "+", 
     RowBox[{"x", "^", "3"}]}]}], ";", 
   RowBox[{"n", "=", "7"}], ";", 
   RowBox[{"inf", "=", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1", ",", "0", ",", "1"}], "}"}]}], ";", 
   RowBox[{"NonsystematicEncodeCyclicCode", "[", 
    RowBox[{"g", ",", "inf", ",", "n", ",", "x"}], "]"}]}], 
  TraditionalForm]], "Input"],

Cell[BoxData[
 FormBox[
  RowBox[{"?", "ParityCheckMatrix"}], TraditionalForm]], "Input"],

Cell[BoxData[{
 FormBox[
  RowBox[{"G", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "1"}], "}"}]}], "}"}]}], 
  TraditionalForm], "\[IndentingNewLine]", 
 FormBox[
  RowBox[{"ParityCheckMatrix", "[", "G", "]"}], TraditionalForm]}], "Input"],

Cell[BoxData[
 FormBox[
  RowBox[{"?", "PuncturedCode"}], TraditionalForm]], "Input"],

Cell[BoxData[{
 FormBox[
  RowBox[{
   RowBox[{"n", "=", "2"}], ";", "H"}], 
  TraditionalForm], "\[IndentingNewLine]", 
 FormBox[
  RowBox[{"PuncturedCode", "[", 
   RowBox[{"H", ",", "n"}], "]"}], TraditionalForm]}], "Input"],

Cell[BoxData[
 FormBox[
  RowBox[{"?", "RectangularCode"}], TraditionalForm]], "Input"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"inf", "=", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "1"}], "}"}]}],
    ";", 
   RowBox[{"n", "=", "3"}], ";", 
   RowBox[{"m", "=", "2"}], ";", 
   RowBox[{"RectangularCode", "[", 
    RowBox[{"n", ",", "m", ",", "inf"}], "]"}]}], TraditionalForm]], "Input"],

Cell[BoxData[
 FormBox[
  RowBox[{"?", "ShowBinaryGaloisField"}], TraditionalForm]], "Input"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"g", "=", 
    RowBox[{"1", "+", "x", "+", 
     RowBox[{"x", "^", "4"}]}]}], ";", 
   RowBox[{"ShowBinaryGaloisField", "[", 
    RowBox[{"g", ",", "x", ",", "b", ",", "a"}], "]"}]}], 
  TraditionalForm]], "Input"],

Cell[BoxData[
 FormBox[
  RowBox[{"?", "ShowBurstRectangularCodeVector"}], TraditionalForm]], "Input"],

Cell[BoxData[{
 FormBox[
  RowBox[{
   RowBox[{"n", "=", "5"}], ";", 
   RowBox[{"m", "=", "2"}], ";", 
   RowBox[{"inf", "=", 
    RowBox[{"{", 
     RowBox[{
     "1", ",", "1", ",", "0", ",", "0", ",", "1", ",", "1", ",", "0", ",", 
      "0", ",", "1", ",", "1"}], "}"}]}], ";"}], 
  TraditionalForm], "\[IndentingNewLine]", 
 FormBox[
  RowBox[{"ShowBurstRectangularCodeVector", "[", 
   RowBox[{"n", ",", "m", ",", "inf", ",", "X"}], "]"}], 
  TraditionalForm]}], "Input"],

Cell[BoxData[
 FormBox[
  RowBox[{"?", "ShowCorrectBurstRectangularCode"}], TraditionalForm]], "Input"],

Cell[BoxData[{
 FormBox[
  RowBox[{
   RowBox[{"n", "=", "5"}], ";", 
   RowBox[{"m", "=", "2"}], ";", 
   RowBox[{"w", "=", 
    RowBox[{"{", 
     RowBox[{
     "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "1", ",", "0", ",", 
      "1", ",", "0", ",", "0", ",", "1", ",", "0", ",", "1", ",", "1", ",", 
      "0", ",", "1", ",", "1", ",", "1"}], "}"}]}], ";"}], 
  TraditionalForm], "\[IndentingNewLine]", 
 FormBox[
  RowBox[{"ShowCorrectBurstRectangularCode", "[", 
   RowBox[{"n", ",", "m", ",", "w", ",", "X"}], "]"}], 
  TraditionalForm]}], "Input"],

Cell[BoxData[
 FormBox[
  RowBox[{"?", "ShowCyclicCode"}], TraditionalForm]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"g", "=", 
   RowBox[{"1", "+", "x", "+", 
    RowBox[{"x", "^", "3"}]}]}], ";", 
  RowBox[{"n", "=", "7"}], ";", 
  RowBox[{"ShowCyclicCode", "[", 
   RowBox[{"g", ",", "n", ",", "x"}], "]"}]}]], "Input"],

Cell[BoxData[
 FormBox[
  RowBox[{"?", "ShowDecHammingCode"}], TraditionalForm]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"m", "=", "3"}], ";", 
  RowBox[{"w", "=", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "1", ",", "1"}],
     "}"}]}], ";", 
  RowBox[{"ShowDecHammingCode", "[", 
   RowBox[{"m", ",", "w"}], "]"}]}]], "Input"],

Cell[BoxData[
 FormBox[
  RowBox[{"?", "ShowDecRectangularCode"}], TraditionalForm]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"n", "=", "2"}], ";", 
  RowBox[{"m", "=", "3"}], ";", 
  RowBox[{"w", "=", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "1",
      ",", "0", ",", "1", ",", "1", ",", "1"}], "}"}]}], ";", 
  RowBox[{"ShowDecRectangularCode", "[", 
   RowBox[{"n", ",", "m", ",", "w"}], "]"}]}]], "Input"],

Cell[BoxData[
 FormBox[
  RowBox[{"?", "ShowErrorTrappingDecoderBCHCode"}], TraditionalForm]], "Input"],

Cell[BoxData[
 FormBox["ShowErrorTrappingDecoderBCHCode", TraditionalForm]], "Input"],

Cell[BoxData[
 FormBox[
  RowBox[{"?", "ShowHammingCode"}], TraditionalForm]], "Input"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"m", "=", "3"}], ";", 
   RowBox[{"inf", "=", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1", ",", "1", ",", "0"}], "}"}]}], ";", 
   RowBox[{"ShowHammingCode", "[", 
    RowBox[{"m", ",", "inf"}], "]"}], " "}], TraditionalForm]], "Input"],

Cell[BoxData[
 FormBox[
  RowBox[{"?", "ShowMeggittDecoder"}], TraditionalForm]], "Input"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"g", "=", 
    RowBox[{"1", "+", "x", "+", 
     RowBox[{"x", "^", "3"}]}]}], ";", 
   RowBox[{"n", "=", "7"}], ";", 
   RowBox[{"ShowMeggittDecoder", "[", 
    RowBox[{"g", ",", "n", ",", "x"}], "]"}]}], TraditionalForm]], "Input"],

Cell[BoxData[
 FormBox[
  RowBox[{"?", "ShowNonsystematicEncoderCyclicCode"}], 
  TraditionalForm]], "Input"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"g", "=", 
    RowBox[{"1", "+", "x", "+", 
     RowBox[{"x", "^", "3"}]}]}], ";", 
   RowBox[{"n", "=", "7"}], ";", 
   RowBox[{"ShowNonsystematicEncoderCyclicCode", "[", 
    RowBox[{"g", ",", "n", ",", "x"}], "]"}]}], TraditionalForm]], "Input"],

Cell[BoxData[
 FormBox[
  RowBox[{"?", "ShowReconstructInformRectangularCode"}], 
  TraditionalForm]], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", "=", "2"}], ";", 
  RowBox[{"m", "=", "3"}], ";", 
  RowBox[{"w", "=", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "1",
      ",", "0", ",", "1", ",", "1", ",", "1"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ShowReconstructInformRectangularCode", "[", 
  RowBox[{"n", ",", "m", ",", "w", ",", "X"}], "]"}]}], "Input"],

Cell[BoxData[
 FormBox[
  RowBox[{"?", "ShowRectangularCode"}], TraditionalForm]], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", "=", "2"}], ";", 
  RowBox[{"m", "=", "3"}], ";", 
  RowBox[{"inf", "=", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "0", ",", "1", ",", "1", ",", "1"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ShowRectangularCode", "[", 
  RowBox[{"n", ",", "m", ",", "inf", ",", "X"}], "]"}]}], "Input"],

Cell[BoxData[
 FormBox[
  RowBox[{"?", "ShowStandardArrays"}], TraditionalForm]], "Input"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"H", "=", 
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"1", "1", "1", "1"},
       {"1", "1", "0", "1"},
       {"1", "0", "1", "0"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Decimal}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]}], 
   ";", 
   RowBox[{"w", "=", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1", ",", "0", ",", "1"}], "}"}]}], ";", 
   RowBox[{"ShowStandardArrays", "[", 
    RowBox[{"H", ",", "w"}], "]"}]}], TraditionalForm]], "Input"],

Cell[BoxData[
 FormBox[
  RowBox[{"?", "ShowSystematicEncode"}], TraditionalForm]], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"H", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "0", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0", ",", "1"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1", ",", "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", "1"}], 
      "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"inf", "=", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0", ",", "1", ",", "1"}], "}"}]}], ";", 
  RowBox[{"ShowSystematicEncode", "[", 
   RowBox[{"H", ",", "inf", ",", "x"}], "]"}]}]}], "Input"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"M", "=", "\[InvisibleSpace]", 
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "1", "1", "0", "1", "1", "0"},
       {"1", "1", "1", "0", "1", "0", "1"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Decimal}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]}], 
   ";", 
   RowBox[{"ShowSystematicEncode", "[", 
    RowBox[{"M", ",", "inf", ",", "x"}], "]"}]}], TraditionalForm]], "Input"],

Cell[BoxData[
 FormBox[
  RowBox[{"?", "ShowSystematicEncoderCyclicCode"}], TraditionalForm]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"g", "=", 
   RowBox[{"1", "+", "x", "+", 
    RowBox[{"x", "^", "3"}]}]}], ";", 
  RowBox[{"n", "=", "7"}], ";", 
  RowBox[{"ShowSystematicEncoderCyclicCode", "[", 
   RowBox[{"g", ",", "n", ",", "x"}], "]"}]}]], "Input"],

Cell[BoxData[
 FormBox[
  RowBox[{"?", "ShowTableMult"}], TraditionalForm]], "Input"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"n", "=", "8"}], ";", 
   RowBox[{"ShowTableMult", "[", "n", "]"}]}], TraditionalForm]], "Input"],

Cell[BoxData[
 FormBox[
  RowBox[{"?", "ShowTablePlus"}], TraditionalForm]], "Input"],

Cell[BoxData[
 RowBox[{"ShowTablePlus", "[", "n", "]"}]], "Input"],

Cell[BoxData[
 FormBox[
  RowBox[{"?", "SingletonBound"}], TraditionalForm]], "Input"],

Cell[BoxData[{
 FormBox[
  RowBox[{
   RowBox[{"n", "=", "10"}], ";", 
   RowBox[{"k", "=", "2"}], ";", 
   RowBox[{"d", "=", "3"}], ";", 
   RowBox[{"SingletonBound", "[", 
    RowBox[{"n", ",", "k", ",", "d"}], "]"}]}], 
  TraditionalForm], "\[IndentingNewLine]", 
 FormBox[
  RowBox[{
   RowBox[{"n", "=", "10"}], ";", 
   RowBox[{"k", "=", "2"}], ";", 
   RowBox[{"Clear", "[", "d", "]"}], ";", 
   RowBox[{"SingletonBound", "[", 
    RowBox[{"n", ",", "k", ",", "d"}], "]"}]}], 
  TraditionalForm], "\[IndentingNewLine]", 
 FormBox[
  RowBox[{
   RowBox[{"n", "=", "10"}], ";", 
   RowBox[{"Clear", "[", "k", "]"}], ";", 
   RowBox[{"d", "=", "3"}], ";", 
   RowBox[{"SingletonBound", "[", 
    RowBox[{"n", ",", "k", ",", "d"}], "]"}]}], 
  TraditionalForm], "\[IndentingNewLine]", 
 FormBox[
  RowBox[{
   RowBox[{"Clear", "[", "n", "]"}], ";", 
   RowBox[{"k", "=", "2"}], ";", 
   RowBox[{"d", "=", "3"}], ";", 
   RowBox[{"SingletonBound", "[", 
    RowBox[{"n", ",", "k", ",", "d"}], "]"}]}], 
  TraditionalForm], "\[IndentingNewLine]", 
 FormBox[
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"n", ",", "k"}], "]"}], ";", 
   RowBox[{"d", "=", "3"}], ";", 
   RowBox[{"SingletonBound", "[", 
    RowBox[{"n", ",", "k", ",", "d"}], "]"}]}], TraditionalForm]}], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"H", "=", "\[InvisibleSpace]", 
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {"0", "1", "1", "0", "1", "1", "0"},
      {"1", "1", "1", "0", "1", "0", "1"}
     },
     GridBoxAlignment->{
      "Columns" -> {{Decimal}}, "ColumnsIndexed" -> {}, 
       "Rows" -> {{Baseline}}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]}], 
  ";", 
  RowBox[{"v", "=", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1"}],
     "}"}]}], ";", 
  RowBox[{"Syndrome", "[", 
   RowBox[{"H", ",", "v"}], "]"}]}]], "Input"],

Cell[BoxData[
 FormBox[
  RowBox[{"?", "SystematicEncode"}], TraditionalForm]], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"H", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "0", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0", ",", "1"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1", ",", "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", "1"}], 
      "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"inf", "=", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0", ",", "1", ",", "1"}], "}"}]}], ";", 
  RowBox[{"SystematicEncode", "[", 
   RowBox[{"H", ",", "inf", ",", "x"}], "]"}]}]}], "Input"],

Cell[BoxData[
 FormBox[
  RowBox[{"?", "SystematicEncodeCyclicCode"}], TraditionalForm]], "Input"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"g", "=", 
    RowBox[{"1", "+", "x", "+", 
     RowBox[{"x", "^", "3"}]}]}], ";", 
   RowBox[{"inf", "=", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1", ",", "0", ",", "1"}], "}"}]}], ";", 
   RowBox[{"n", "=", "7"}], ";", 
   RowBox[{"SystematicEncodeCyclicCode", "[", 
    RowBox[{"g", ",", "inf", ",", "n", ",", "x"}], "]"}]}], 
  TraditionalForm]], "Input"],

Cell[BoxData[
 FormBox[
  RowBox[{"?", "VEC"}], TraditionalForm]], "Input"],

Cell[BoxData[
 FormBox[
  RowBox[{"VEC", "[", 
   RowBox[{"1000", ",", "10"}], "]"}], TraditionalForm]], "Input"],

Cell[BoxData[
 FormBox[
  RowBox[{"?", "WeightPolynomial"}], TraditionalForm]], "Input"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"H", "=", 
    RowBox[{"HammingMatrix", "[", "3", "]"}]}], ";", 
   RowBox[{"WeightPolynomial", "[", 
    RowBox[{"H", ",", "x"}], "]"}], " "}], TraditionalForm]], "Input"]
},
WindowSize->{719, 809},
WindowMargins->{{Automatic, 0}, {Automatic, 0}},
PrivateNotebookOptions->{"VersionedStylesheet"->{"Default.nb"[8.] -> True}},
FrontEndVersion->"10.2 for Linux x86 (64-bit) (July 29, 2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 294, 7, 52, "Input"],
Cell[855, 29, 359, 11, 31, "Input"],
Cell[1217, 42, 85, 2, 31, "Input"],
Cell[1305, 46, 95, 2, 31, "Input"],
Cell[1403, 50, 89, 2, 31, "Input"],
Cell[1495, 54, 256, 8, 31, "Input"],
Cell[1754, 64, 100, 2, 31, "Input"],
Cell[1857, 68, 151, 4, 30, "Input"],
Cell[2011, 74, 98, 2, 31, "Input"],
Cell[2112, 78, 389, 10, 50, "Input"],
Cell[2504, 90, 82, 2, 31, "Input"],
Cell[2589, 94, 235, 7, 30, "Input"],
Cell[2827, 103, 86, 2, 31, "Input"],
Cell[2916, 107, 274, 8, 30, "Input"],
Cell[3193, 117, 90, 2, 31, "Input"],
Cell[3286, 121, 377, 10, 50, "Input"],
Cell[3666, 133, 85, 2, 31, "Input"],
Cell[3754, 137, 334, 10, 50, "Input"],
Cell[4091, 149, 84, 2, 31, "Input"],
Cell[4178, 153, 65, 1, 30, "Input"],
Cell[4246, 156, 80, 2, 31, "Input"],
Cell[4329, 160, 61, 1, 30, "Input"],
Cell[4393, 163, 86, 2, 31, "Input"],
Cell[4482, 167, 206, 6, 32, "Input"],
Cell[4691, 175, 98, 2, 31, "Input"],
Cell[4792, 179, 320, 8, 55, "Input"],
Cell[5115, 189, 102, 2, 31, "Input"],
Cell[5220, 193, 257, 7, 55, "Input"],
Cell[5480, 202, 87, 2, 31, "Input"],
Cell[5570, 206, 459, 13, 52, "Input"],
Cell[6032, 221, 84, 2, 31, "Input"],
Cell[6119, 225, 152, 3, 52, "Input"],
Cell[6274, 230, 87, 2, 31, "Input"],
Cell[6364, 234, 155, 3, 52, "Input"],
Cell[6522, 239, 92, 2, 31, "Input"],
Cell[6617, 243, 175, 5, 31, "Input"],
Cell[6795, 250, 93, 2, 31, "Input"],
Cell[6891, 254, 1323, 39, 112, "Input"],
Cell[8217, 295, 84, 2, 31, "Input"],
Cell[8304, 299, 1273, 39, 132, "Input"],
Cell[9580, 340, 83, 2, 31, "Input"],
Cell[9666, 344, 280, 8, 31, "Input"],
Cell[9949, 354, 85, 2, 31, "Input"],
Cell[10037, 358, 287, 8, 31, "Input"],
Cell[10327, 368, 90, 2, 31, "Input"],
Cell[10420, 372, 268, 8, 31, "Input"],
Cell[10691, 382, 85, 2, 31, "Input"],
Cell[10779, 386, 433, 14, 31, "Input"],
Cell[11215, 402, 101, 2, 31, "Input"],
Cell[11319, 406, 411, 12, 52, "Input"],
Cell[11733, 420, 89, 2, 31, "Input"],
Cell[11825, 424, 358, 11, 52, "Input"],
Cell[12186, 437, 85, 2, 31, "Input"],
Cell[12274, 441, 227, 7, 52, "Input"],
Cell[12504, 450, 87, 2, 31, "Input"],
Cell[12594, 454, 347, 10, 31, "Input"],
Cell[12944, 466, 93, 2, 31, "Input"],
Cell[13040, 470, 260, 8, 31, "Input"],
Cell[13303, 480, 102, 2, 31, "Input"],
Cell[13408, 484, 478, 14, 52, "Input"],
Cell[13889, 500, 103, 2, 31, "Input"],
Cell[13995, 504, 562, 15, 52, "Input"],
Cell[14560, 521, 86, 2, 31, "Input"],
Cell[14649, 525, 239, 7, 32, "Input"],
Cell[14891, 534, 90, 2, 31, "Input"],
Cell[14984, 538, 278, 8, 32, "Input"],
Cell[15265, 548, 94, 2, 31, "Input"],
Cell[15362, 552, 381, 10, 55, "Input"],
Cell[15746, 564, 103, 2, 31, "Input"],
Cell[15852, 568, 85, 1, 31, "Input"],
Cell[15940, 571, 87, 2, 31, "Input"],
Cell[16030, 575, 284, 8, 31, "Input"],
Cell[16317, 585, 90, 2, 31, "Input"],
Cell[16410, 589, 278, 8, 31, "Input"],
Cell[16691, 599, 109, 3, 31, "Input"],
Cell[16803, 604, 294, 8, 31, "Input"],
Cell[17100, 614, 111, 3, 31, "Input"],
Cell[17214, 619, 431, 11, 55, "Input"],
Cell[17648, 632, 91, 2, 31, "Input"],
Cell[17742, 636, 347, 9, 55, "Input"],
Cell[18092, 647, 90, 2, 31, "Input"],
Cell[18185, 651, 574, 17, 69, "Input"],
Cell[18762, 670, 92, 2, 31, "Input"],
Cell[18857, 674, 589, 18, 77, "Input"],
Cell[19449, 694, 505, 13, 50, "Input"],
Cell[19957, 709, 103, 2, 31, "Input"],
Cell[20063, 713, 256, 7, 55, "Input"],
Cell[20322, 722, 85, 2, 31, "Input"],
Cell[20410, 726, 143, 4, 31, "Input"],
Cell[20556, 732, 85, 2, 31, "Input"],
Cell[20644, 736, 66, 1, 32, "Input"],
Cell[20713, 739, 86, 2, 31, "Input"],
Cell[20802, 743, 1283, 39, 132, "Input"],
Cell[22088, 784, 578, 16, 46, "Input"],
Cell[22669, 802, 88, 2, 31, "Input"],
Cell[22760, 806, 585, 18, 77, "Input"],
Cell[23348, 826, 98, 2, 31, "Input"],
Cell[23449, 830, 408, 12, 52, "Input"],
Cell[23860, 844, 75, 2, 31, "Input"],
Cell[23938, 848, 113, 3, 31, "Input"],
Cell[24054, 853, 88, 2, 31, "Input"],
Cell[24145, 857, 218, 6, 31, "Input"]
}
]
*)

(* End of internal cache information *)
